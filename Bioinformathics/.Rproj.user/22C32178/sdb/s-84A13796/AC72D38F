{
    "contents" : "#function that creates annotation table from a database \nadd_annotation=function(database,annotation,filename){\n  \n      \n  #load org.At.tair.db\n  suppressPackageStartupMessages(require(get(database)))\n  \n  # Create annotation list   \n  annotation_init = annotation\n  # Get the TAIR identifiers that are mapped to a gene name\n  mapped_tairs = mappedkeys(annotation_init)\n  # Convert to a list\n  annotation_list = as.list(annotation_init[mapped_tairs])  \n    \n  #making a new variable for the names\n  gene_names = names(annotation_list)\n  \n  #setting the gene_descriptions to reset in case of rerunning the script\n  gene_desc = NULL\n  \n  #iterate over the entries in annotation list\n  for (i in annotation_list){\n    #get the first element of the list with descriptions\n    gene_desc <- c(gene_desc,i[1])\n  }\n  \n  #the data frame is made of names and descriptions\n  gene_frame = data.frame(gene_name=gene_names, gene_gene_desc=gene_desc, stringsAsFactors = FALSE)\n      \n  #read the file provided\n  table.summary = read.table(filename, sep='\\t', header=TRUE, stringsAsFactors=FALSE)\n  \n  #merge the two tables\n  merged_table=merge(table.summary,gene_frame, by.x = 'Genes', by.y = 'gene_name',all.x=TRUE)\n  \n  #change the name of the last column to 'Description' \n  colnames(merged_table)[ncol(merged_table)] = 'Description'\n  \n  return(merged_table)\n  }\n\n#example plus_plus_table = add_annotation(org.At.tair.db, org.At.tairGENENAME, 'plus_plus.txt')\n\n\n",
    "created" : 1418213458483.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "451609778",
    "id" : "AC72D38F",
    "lastKnownWriteTime" : 1418213410,
    "path" : "D:/OneDrive/Advanced bioinf/project/Norm_clust_GO/function_gene_annot.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}